@page "/edit-game"
@page "/edit-game/{id:int}"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject GameClient GameClient
@inject GenreClient GenreClient

@using Models
@using Clients

<PageTitle>@title</PageTitle>

<h3>@title</h3>

@if(genres is null || game is null)
{
    <p><em>Loading.....</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@game" FormName="editGame" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label for="name" class="form-label">Name: </label>
                    <InputText class="form-control" id="name" @bind-Value="game.Name" />
                    <ValidationMessage For="() => game.Name" />
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre: </label>
                    <InputSelect class="form-select" id="genre" @bind-Value="game.GenreId">
                        <option value="" selected disabled>Selec a genre</option>
                        @foreach (var genre in genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => game.GenreId" />
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price: </label>
                    <InputNumber class="form-control" id="price" @bind-Value="game.Price" min="0" />
                    <ValidationMessage For="() => game.Price" />
                </div>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release Date: </label>
                    <InputDate class="form-control" id="releaseDate" @bind-Value="game.ReleaseDate" />
                </div>
                <div class="mb-3">
                    <button type="submit" class="btn btn-success">
                        <span class="mx-3">Submit</span>
                    </button>
                    <a role="button" class="btn btn-secondary mx-3" href="/">
                        <span class="mx-3">Cancle</span>
                    </a>
                </div>
            </EditForm>
        </div>
    </div>
}


@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private GameDetails? game { get; set; }

    private Genre[]? genres;
    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        if(game is not null)
        {
            return;
        }

        if(Id is not null)
        {
            game = GameClient.GetGameDetails(Id.Value);
            title = $"Edit {game.Name}";
        }
        else
        {
            game = new();
            title = "New Game";
        }
    }

    protected override void OnInitialized()
    {
        genres = GenreClient.GetGenres();
    }

    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(game);

        if(Id is null)
        {
            GameClient.AddGame(game);
        }
        else
        {
            game.Id = Id.Value;
            GameClient.UpdateGame(game);
        }

        NavigationManager.NavigateTo("/");
    }
}
