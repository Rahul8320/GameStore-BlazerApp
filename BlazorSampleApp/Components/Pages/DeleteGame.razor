@inject GameClient GameClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@using Models
@using Clients

<title>Delete Game</title>


<!-- Modal -->
<div class="modal fade" id="@GetModalId(Game)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">@title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="@ConfirmAsync">Delete</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public GameSummery? Game { get; set; }

    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        title = $"Delete {Game?.Name} ?";
    }

    public static string GetModalId(GameSummery? game)
    {
        ArgumentNullException.ThrowIfNull(game);

        return $"deleteModal-{game.Id}";
    }

    private async Task ConfirmAsync()
    {
        await GameClient.DeleteGameAsync(Game!.Id);
        NavigationManager.Refresh();
    }
}